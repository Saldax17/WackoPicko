namespace: my_app
working_dir: .  # Define la raíz del proyecto como directorio de trabajo
commit: e59607b9de3ef4c13d292705fg3da1ff0c67eb38  # Commit específico para análisis
language: EN  # Idioma para los mensajes de salida
output:
  file_path: ./results.csv  # Archivo de resultados generado en la raíz del proyecto
  format: CSV  # Formato del archivo de salida
checks:
  - F052  # Lista de cheques específicos que deseas ejecutar
strict: false  # Define si el análisis debe ser estricto
file_size_limit: false  # Desactiva el límite de tamaño de archivo para el análisis
sast:
  include:
    - ./relative/path/to/file/or/dir  # Rutas específicas relativas al proyecto
    - src/main/java/org/test/Test.java
    - glob(*)  # Archivos en el nivel raíz
    - glob(**.java)  # Todos los archivos .java en el proyecto
    - glob(src/**/test*.py)  # Todos los archivos Python que coincidan con "test*"
sca:
  include:
    - .  # Incluye toda la raíz del proyecto para el análisis de dependencias
apk:
  include:
    - ./relative/path/to/build/awesome-app-v1.0.apk
    - build/awesome-app-v1.0.apk
cspm:
  aws_credentials:
    - access_key_id: "000f"  # Llave de acceso de AWS (reemplaza por valores reales)
      secret_access_key: "000f"  # Secreto de acceso de AWS (reemplaza por valores reales)
dast:
  urls:
    - https://localhost.com  # URL objetivo para análisis DAST
    - https://localhost.com:443
  ssl_checks: true  # Habilita las verificaciones SSL
  http_checks: true  # Habilita verificaciones HTTP
debug: true  # Modo de depuración activado para mayor detalle en la salida
